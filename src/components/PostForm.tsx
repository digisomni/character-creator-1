import React, { Component } from "react";
import axios from "axios";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import logo from './../graphic_assets/logo.jpg';

// Loading Assets (SubComponents & CSS)
import "../css/postform.css";
// @ts-expect-error ts-migrate(6142) FIXME: Module './Loader' was resolved to '/home/beast/Doc... Remove this comment to see the full error message
import Loader from "./Loader";
// @ts-expect-error ts-migrate(6142) FIXME: Module './Response' was resolved to '/home/beast/D... Remove this comment to see the full error message
import Response from "./Response";

type State = any;

class PostForm extends Component<{}, State> {
  constructor(props: {}) {
    super(props);
    this.state = {
      name: "MyCharacter",
      loader: false,
      response: false,
      status: false
    };
    this.handleInputChange = this.handleInputChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleSubmit(event: any) {
    (this.props as any).updateVisible(false);
    this.setState({ loader: true });
    const accesstoken = (this.props as any).accesstoken;
    // @ts-expect-error ts-migrate(2551) FIXME: Property 'export' does not exist on type 'Window &... Remove this comment to see the full error message
    const stlData = window.export();
    axios({
      method: "post",
      url: "https://www.myminifactory.com/api/v2/object",
      headers: {
        "Content-Type": "application/json",
        Authorization: "Bearer " + accesstoken
      },
      data: {
        name: this.state.name,
        description:
          "This is a file generated by the Character Customizer (beta) of MyMiniFactory. Give it a try at the following link: www.myminifactory.com/character-creator/",
        tags: "customizer",
        files: [
          {filename: "Stand.stl"},
          {filename: "Mesh_Torso.stl"},
          {filename: "Mesh_Arm_L.stl"},
          {filename: "Mesh_Arm_R.stl"},
          {filename: "Mesh_Foot_L.stl"},
          {filename: "Mesh_Foot_R.stl"},
          {filename: "Mesh_Hand_L.stl"},
          {filename: "Mesh_Hand_R.stl"},
          {filename: "Mesh_Head.stl"},
          {filename: "Mesh_Leg_L.stl"},
          {filename: "Mesh_Leg_R.stl"}
        ]
      }
    }).then(responseMetaData => {
      const files = responseMetaData.data.files;
      const promises = files.map((file: any, i: any) => axios({
        method: "post",
        url:
          "https://www.myminifactory.com/api/v2/file?upload_id=" + file.upload_id,
        headers: {
          Authorization: "Bearer " + accesstoken
        },
        data: stlData[i]
        }));
      Promise.all(promises).then(responses => {
        const statusCounter = responses.filter(response => (response as any).status === 201).length;
        if (statusCounter === responses.length){
          // Everything okay
          this.setState({loader: false, response: true, status: true});
          setTimeout(() => {
            this.setState({response: false})
          }, 1500);
        } else {
          // Something went wrong
          this.setState({loader: false, response: true, status: false});
          setTimeout(() => {
            this.setState({response: false})
          }, 1500);
        }
      });
    });
    event.preventDefault();
  }

  handleInputChange(event: any) {
    this.setState({
      name: event.target.value
    });
  }

  renderForm() {
    if ((this.props as any).visible) {
      return (
        // @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message
        <div className="screen abs top left">
          {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
          <div className="abs popup">
            {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
            <FontAwesomeIcon
              className="abs cross"
              icon="times-circle"
              // @ts-expect-error ts-migrate(2322) FIXME: Type '{ className: string; icon: "times-circle"; o... Remove this comment to see the full error message
              onClick={() => {
                (this.props as any).updateVisible(false);
              }}
            />
            {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
            <div className="logotopform">
              {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
              <img src={logo} alt="logo"/>
            </div>
            {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
            <div className="title">
              {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
              <h2>Upload to MyMiniFactory</h2>
            </div>
            {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
            <form className="form" onSubmit={this.handleSubmit}>
              {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
              <p>Give it a name:</p>
              {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
              <input
                className="nameinput"
                  type="text"
                  value={this.state.name}
                  onChange={this.handleInputChange}
                />
              {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
              <div className="submit-container">
                {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
                <input className="buttons" type="submit" value="Submit" />
              </div>
              
            </form>
          </div>
        </div>
      );
    }
  }
  

  render() {
    return (
      // @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message
      <div>
        {this.renderForm()}
        {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
        <Loader visible={this.state.loader} />
        {/* @ts-expect-error ts-migrate(17004) FIXME: Cannot use JSX unless the '--jsx' flag is provided... Remove this comment to see the full error message */}
        <Response visible={this.state.response} status={this.state.status}  />
      </div>
    );
  }
}

export default PostForm;
